<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.llbt.cms.dao.UserMapper">
	<!-- 查询结果映射 -->
	<resultMap id="searchResultMap" type="com.llbt.cms.entity.User">
		<result property="id" column="id" />
		<result property="createBy" column="create_by" />
		<result property="createDate" column="create_date" />
		<result property="updateBy" column="update_by" />
		<result property="updateDate" column="update_date" />
		<result property="userName" column="user_name" />
		<result property="userPassword" column="user_password" />
		<result property="realName" column="real_name" />
		<result property="userNo" column="user_no" />
		<result property="userPhone" column="user_phone" />
		<result property="userEmail" column="user_email" />
		<result property="certType" column="cert_type" />
		<result property="certId" column="cert_id" />
		<result property="deptId" column="dept_id" />
		<result property="deptName" column="dept_name" />
		<result property="roleId" column="role_id" />
		<result property="roleName" column="role_name" />
		<result property="userState" column="user_state" />
		<result property="isDelete" column="is_delete" />
		<result property="userType" column="user_type" />
		<result property="userGender" column="user_gender" />
		<result property="userRemark" column="user_remark" />
		<result property="userPhoto" column="user_photo" />
		<result property="userId" column="user_id" />
		<result property="loginDate" column="login_date" />
		<result property="loginState" column="login_state" />
		<result property="loginIp" column="login_ip" />
		<result property="loginInfo" column="login_info" />
	</resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		u.id,u.create_by,u.create_date,u.update_by,u.update_date,u.user_name,u.user_password,u.real_name,u.user_no,u.user_phone,u.user_email,u.cert_type,u.cert_id,u.dept_id,u.role_id,u.user_state,u.is_delete,u.user_type,u.user_gender,u.user_remark,nvl(u.user_photo,'/upload/photo/default.png') user_photo
	</sql>
	<!-- 新增记录 -->
	<insert id="insert" parameterType="com.llbt.cms.entity.User">
		INSERT INTO mms_user (
		id ,
		create_by ,
		create_date ,
		update_by ,
		update_date ,
		user_name ,
		user_password ,
		real_name ,
		user_no ,
		user_phone ,
		user_email ,
		cert_type ,
		cert_id ,
		dept_id ,
		role_id ,
		user_state ,
		is_delete ,
		user_type ,
		user_gender ,
		user_remark,user_photo
		) VALUES (
		#{id} ,
		#{createBy} ,
		#{createDate} ,
		#{updateBy} ,
		#{updateDate} ,
		#{userName} ,
		#{userPassword} ,
		#{realName}
		,
		#{userNo} ,
		#{userPhone} ,
		#{userEmail} ,
		#{certType} ,
		#{certId} ,
		#{deptId} ,
		#{roleId} ,
		#{userState} ,
		#{isDelete} ,
		#{userType} ,
		#{userGender} ,
		#{userRemark},#{userPhoto}
		)
	</insert>
	<!-- 单记录删除 -->
	<delete id="delete" parameterType="java.lang.String">
		delete from mms_user where
		id=#{id}
	</delete>
	<!-- 批量记录删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from mms_user where id in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">#{ids}</foreach>
	</delete>
	<!-- 按条件删除 -->
	<!-- <delete id="deleteBySearchCondition" parameterType="com.llbt.cms.vo.searcher.UserSC"> 
		DELETE FROM mms_user <include refid="searchConditionSQL" /> </delete> -->
	<!-- 单记录更新 -->
	<update id="update" parameterType="com.llbt.cms.entity.User">
		UPDATE mms_user
		<trim prefix="set" suffixOverrides=",">
			<if test="id != null">
				id =#{id},
			</if>
			<if test="updateBy != null">
				update_by =#{updateBy},
			</if>
			<if test="updateDate != null">
				update_date =#{updateDate},
			</if>
			<if test="userName != null">
				user_name =#{userName},
			</if>
			<if test="userPassword != null">
				user_password =#{userPassword},
			</if>
			<if test="realName != null">
				real_name =#{realName},
			</if>
			<if test="userNo != null">
				user_no =#{userNo},
			</if>
			<if test="userPhone != null">
				user_phone =#{userPhone},
			</if>
			<if test="userEmail != null">
				user_email =#{userEmail},
			</if>
			<if test="certType != null">
				cert_type =#{certType},
			</if>
			<if test="certId != null">
				cert_id =#{certId},
			</if>
			<if test="deptId != null">
				dept_id =#{deptId},
			</if>
			<if test="roleId != null">
				role_id =#{roleId},
			</if>
			<if test="userState != null">
				user_state =#{userState},
			</if>
			<if test="isDelete != null">
				is_delete =#{isDelete},
			</if>
			<if test="userType != null">
				user_type =#{userType},
			</if>
			<if test="userGender != null">
				user_gender =#{userGender},
			</if>
			<if test="userRemark != null">
				user_remark =#{userRemark},
			</if>
			<if test="userPhoto != null">
				user_photo =#{userPhoto},
			</if>
		</trim>
		where id=#{id}
	</update>
	<!-- 查询记录BY ID -->
	<select id="getById" resultMap="searchResultMap" parameterType="java.lang.String">
		select
		<include refid="columns" />
		, r.role_name, nvl(d.dept_name,'Super Manager') dept_name
		from mms_user
		u
		left join (select ur.user_id,
		wm_concat(mr.role_name) role_name
		from
		mms_user_role ur
		left join
		mms_role mr
		on ur.role_id = mr.id
		where
		mr.is_delete = 0
		and ur.user_id =
		#{id}
		group by ur.user_id) r
		on u.id =
		r.user_id
		left join mms_department
		d
		on u.dept_id = d.id
		and d.is_delete =
		0
		WHERE u.is_delete = 0
		and u.id =
		#{id}
	</select>
	<!-- 查询所有记录 -->
	<select id="getAll" resultMap="searchResultMap" parameterType="java.lang.String">
		select
		<include refid="columns" />
		from
		mms_user
	</select>
	<!-- 查询分页记录 -->
	<select id="queryPage" resultMap="searchResultMap"
		parameterType="com.llbt.cms.vo.Page">
		select *
		from (select rownum rw, t.*
		from (select
		<include refid="columns" />,d.dept_name
		from mms_user u left join mms_department d on u.dept_id=d.id and
		d.is_delete=0 where u.is_delete=0 and u.USER_TYPE=0 
		<if test="entity!=null and entity.realName!=null and entity.realName!=''">
			and real_name=#{entity.realName}
		</if>
		<if test="entity!=null and entity.userPhone!=null and entity.userPhone!=''">
			and user_phone=#{entity.userPhone}
		</if>
		 order by
		u.create_date
		desc) t
		where
		rownum <![CDATA[<=]]>
		#{endLine})
		where rw <![CDATA[>]]>
		#{startLine}
	</select>

	<!-- 动态查询条件 -->
	<sql id="searchConditionSQL">
		<trim prefix="where" prefixOverrides="AND |OR ">
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="createBy != null">
				and create_by = #{createBy}
			</if>
			<if test="createDate != null">
				and create_date = #{createDate}
			</if>
			<if test="updateBy != null">
				and update_by = #{updateBy}
			</if>
			<if test="updateDate != null">
				and update_date = #{updateDate}
			</if>
			<if test="userName != null">
				and user_name = #{userName}
			</if>
			<if test="userPassword != null">
				and user_password = #{userPassword}
			</if>
			<if test="realName != null">
				and real_name = #{realName}
			</if>
			<if test="userNo != null">
				and user_no = #{userNo}
			</if>
			<if test="userPhone != null">
				and user_phone = #{userPhone}
			</if>
			<if test="userEmail != null">
				and user_email = #{userEmail}
			</if>
			<if test="certType != null">
				and cert_type = #{certType}
			</if>
			<if test="certId != null">
				and cert_id = #{certId}
			</if>
			<if test="deptId != null">
				and dept_id = #{deptId}
			</if>
			<if test="roleId != null">
				and role_id = #{roleId}
			</if>
			<if test="userState != null">
				and user_state = #{userState}
			</if>
			<if test="isDelete != null">
				and is_delete = #{isDelete}
			</if>
			<if test="userType != null">
				and user_type = #{userType}
			</if>
			<if test="userGender != null">
				and user_gender = #{userGender}
			</if>
			<if test="userRemark != null">
				and user_remark = #{userRemark}
			</if>
		</trim>
	</sql>
	<!-- <select id="search" resultMap="searchResultMap" useCache="true" parameterType="com.llbt.cms.vo.searcher.UserSC"> 
		select <include refid="columns" /> from mms_user <include refid="searchConditionSQL" 
		/> </select> -->

	<!-- <select id="selectPage" resultMap="searchResultMap" useCache="true" 
		parameterType="com.llbt.cms.vo.searcher.UserSC"> select <include refid="columns" 
		/> from mms_user <include refid="searchConditionSQL" /> </select> -->
	<!-- <select id="selectPageCount" resultType="long" parameterType="com.llbt.cms.vo.searcher.UserSC"> 
		select count(id) from mms_user <include refid="searchConditionSQL" /> </select> -->
	<!-- 登陆 -->
	<select id="getUserByUserName" resultMap="searchResultMap"
		parameterType="com.llbt.cms.entity.User">
		select
		<include refid="columns" />
		,nvl(d.dept_name,'Super Manager') dept_name from mms_user u left join
		mms_department d on
		u.dept_id=d.id
		WHERE u.is_delete=0 and
		user_name =
		#{userName}
	</select>

	<select id="getUserCount" resultType="int">
		select count(1) from
		mms_user where is_delete=0 and USER_TYPE=0 
		<if test="entity!=null and entity.realName!=null and entity.realName!=''">
			and real_name=#{entity.realName}
		</if>
		<if test="entity!=null and entity.userPhone!=null and entity.userPhone!=''">
			and user_phone=#{entity.userPhone}
		</if>
	</select>

	<!-- 用户角色模块 -->
	<insert id="insertUserRoles">
		BEGIN
		<foreach collection="roleIds" item="roleId" index="index"
			separator=";">
			insert into mms_user_role(user_id,role_id)
			values(#{userId},#{roleId})
		</foreach>
		;END;
	</insert>

	<delete id="deleteUserRoles" parameterType="java.lang.String">
		delete from
		mms_user_role where user_id=#{userId}
	</delete>

	<select id="countUsername" resultType="int">
		select count(1) from
		MMS_USER where is_delete = 0 and user_name=#{value}
	</select>
	<select id="countLoginError" resultType="int">
	select count(1) from MMS_LOGIN_RECORD where login_state = 0 and trunc(login_date)=trunc(sysdate) and user_id=#{userId}
	</select>	
	<!-- 新增记录 -->
	<insert id="insertLoginRecord" parameterType="com.llbt.cms.entity.LoginRecord">
		INSERT INTO MMS_LOGIN_RECORD (
		id ,
		USER_ID ,
		LOGIN_DATE ,
		LOGIN_STATE ,
		LOGIN_IP ,
		LOGIN_INFO 
		) VALUES (
		#{id} ,
		#{userId},
		#{loginDate},
		#{loginState},
		#{loginIp},
		#{loginInfo}
		)
	</insert>
</mapper>